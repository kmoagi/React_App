[{"C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\index.js":"1","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\App.js":"2","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\reportWebVitals.js":"3","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\shared\\dishes.js":"4","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\components\\MenuComponents.js":"5","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\components\\DishdetailComponents.js":"6","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\components\\MainComponent.js":"7","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\components\\HeaderComponent.js":"8","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\components\\FooterComponent.js":"9","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\components\\HomeComponent.js":"10","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\components\\ContactComponent.js":"11","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\shared\\promotions.js":"12","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\shared\\leaders.js":"13","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\shared\\comments.js":"14","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\components\\AboutComponent.js":"15","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\redux\\configureStore.js":"16","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\redux\\dishes.js":"17","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\redux\\leaders.js":"18","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\redux\\promotions.js":"19","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\redux\\comments.js":"20","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\redux\\ActionCreators.js":"21","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\components\\LoadingComponent.js":"22","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\redux\\forms.js":"23"},{"size":669,"mtime":1611679134055,"results":"24","hashOfConfig":"25"},{"size":626,"mtime":1611582388805,"results":"26","hashOfConfig":"25"},{"size":375,"mtime":1611565911523,"results":"27","hashOfConfig":"25"},{"size":1570,"mtime":1611565911570,"results":"28","hashOfConfig":"25"},{"size":1920,"mtime":1612355933317,"results":"29","hashOfConfig":"25"},{"size":8267,"mtime":1612280546793,"results":"30","hashOfConfig":"25"},{"size":5369,"mtime":1612450402227,"results":"31","hashOfConfig":"25"},{"size":5267,"mtime":1611580308824,"results":"32","hashOfConfig":"25"},{"size":2738,"mtime":1611565911492,"results":"33","hashOfConfig":"25"},{"size":1925,"mtime":1612422219219,"results":"34","hashOfConfig":"25"},{"size":11626,"mtime":1612422552069,"results":"35","hashOfConfig":"25"},{"size":445,"mtime":1611565911586,"results":"36","hashOfConfig":"25"},{"size":2382,"mtime":1611565911586,"results":"37","hashOfConfig":"25"},{"size":4279,"mtime":1611565911554,"results":"38","hashOfConfig":"25"},{"size":5110,"mtime":1612450590002,"results":"39","hashOfConfig":"25"},{"size":881,"mtime":1612257714079,"results":"40","hashOfConfig":"25"},{"size":787,"mtime":1612176697345,"results":"41","hashOfConfig":"25"},{"size":832,"mtime":1612421650846,"results":"42","hashOfConfig":"25"},{"size":579,"mtime":1612258342580,"results":"43","hashOfConfig":"25"},{"size":605,"mtime":1612277141831,"results":"44","hashOfConfig":"25"},{"size":6819,"mtime":1612421495847,"results":"45","hashOfConfig":"25"},{"size":256,"mtime":1612175267733,"results":"46","hashOfConfig":"25"},{"size":170,"mtime":1612199159116,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d16g8",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":1,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\index.js",[],"C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\App.js",["103"],"C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\shared\\dishes.js",[],["104","105"],"C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\components\\MenuComponents.js",["106","107","108","109"],"import React, { Component } from 'react';\r\nimport { Media, Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem  } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction RenderMenuItem ({dish, onClick}) {\r\n  return (\r\n      <Card>\r\n     \r\n          <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n          <CardImgOverlay>\r\n              <CardTitle>{dish.name}</CardTitle>\r\n          </CardImgOverlay>\r\n      </Card>\r\n  );\r\n}\r\n\r\nconst Menu = (props) => {\r\n\r\n  const menu = props.dishes.map((dish) => {\r\n      return (\r\n          <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n              <RenderMenuItem dish={dish} onClick={props.onClick} />\r\n          </div>\r\n      );\r\n  });\r\n  return (\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            <Breadcrumb>\r\n                <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"col-12\">\r\n                <h3>Menu</h3>\r\n                <hr />\r\n            </div>                \r\n        </div>\r\n        <div className=\"row\">\r\n            {menu}\r\n        </div>\r\n    </div>\r\n);\r\n\r\n  }\r\n\r\nexport default Menu;","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\components\\DishdetailComponents.js",["110","111","112","113","114"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, ModalBody, ModalHeader, Row, Col } from 'reactstrap';\r\nimport { Control, LocalForm, Errors, Modal } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\n\r\n\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n\r\n\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n  \r\n      this.toggleNav = this.toggleNav.bind(this);\r\n      this.state = {\r\n        isModalOpen: false\r\n      };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n \r\n\r\n\r\ntoggleModal(){\r\n    this.setState({\r\n        isModalOpen: !this.state.isModalOpen\r\n      });\r\n    }\r\n\r\n\r\nhandleSubmit(values) {\r\n    this.toggleModal();// event.preventDefault();\r\n    this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n\r\n}\r\n\r\nrender(){\r\n\r\n    return(\r\n\r\n        <div className=\"Container\">\r\n         <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil\"></span> Submit Comment</Button>\r\n         <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}></Modal>\r\n         <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n        <ModalBody>\r\n\r\n        <LocalForm>\r\n<Modal>\r\n    <div className=\"Modal\">\r\n \r\n  \r\n                      <Row className=\"form-group\">\r\n                      <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"  className=\"form-control\" md={12}>\r\n                                      \r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    \r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                      \r\n                      \r\n                      \r\n                       <Row className=\"form-group\">\r\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                \r\n                                \r\n                                <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                \r\n                                \r\n                                </Col>\r\n                            </Row>\r\n         \r\n         \r\n         \r\n         \r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"message\" md={2}>Comments</Label>\r\n                 <Col md={10}>\r\n                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\" className=\"form-control\" />\r\n                 </Col>\r\n                </Row>\r\n\r\n\r\n                <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n           </div>\r\n           </Modal>\r\n         </LocalForm>\r\n        </ModalBody>\r\n        \r\n        </div> \r\n    );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction RenderComments({comments, addComment, dishId}){\r\n\r\nif (comments != null)\r\nreturn (\r\n    <div>\r\n        <h4>Comments</h4>\r\n        <ul class=\"list-unstyled\">\r\n            {comments.map(comment => {\r\n                return (\r\n                    <li className=\"mb-2\">\r\n                        <div>{comment.comment}</div>\r\n                        <div> <p> {comment.author}, {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))} </p>\r\n                        </div>\r\n                    </li>\r\n                );\r\n            })}\r\n        </ul>\r\n     <CommentForm dishId={dishId} addComment={addComment} />\r\n    </div>\r\n);\r\n\r\nelse\r\nreturn (\r\n    <div>\r\n        <CommentForm/>\r\n    </div>\r\n);\r\n\r\n\r\n}   \r\n\r\n\r\n\r\nfunction RenderDish({dish}) {\r\n  return (\r\n      <div className=\"row\">\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n              {this.renderCard(dish)}\r\n          </div>\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n              {this.renderComments(dish)}\r\n          </div>\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nconst  DishDetail = (props) => {\r\n  if (this.props.dish != null)\r\n      return (\r\n      <div class=\"container\">\r\n      <div className=\"row\">\r\n           \r\n      <Breadcrumb>\r\n\r\n          <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n          <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n       </Breadcrumb>\r\n        <div className=\"col-12\">\r\n       <h3>{props.dish.name}</h3>\r\n       <hr />\r\n        </div>                \r\n        </div>\r\n<div className=\"row\">\r\n  <div className=\"col-12 col-md-5 m-1\">\r\n      <RenderDish dish={props.dish} />\r\n</div>\r\n<div className=\"col-12 col-md-5 m-1\">\r\n      <RenderComments comments={props.comments}\r\n      addComment={props.addComment}\r\n      dishId={props.dish.id} />\r\n  </div>\r\n </div>\r\n</div>\r\n);\r\n  else\r\n      return (\r\n          <div></div>\r\n      );\r\n}\r\n                                                    \r\n\r\n\r\nexport default Dishdetail;","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\components\\MainComponent.js",["115"],"import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\nimport Menu from './MenuComponents';\r\nimport DishDetail from './DishdetailComponents';\r\nimport { DISHES } from '../shared/dishes';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport { COMMENTS } from '../shared/comments';\r\nimport { PROMOTIONS } from '../shared/promotions';\r\nimport { LEADERS } from '../shared/leaders';\r\nimport About from './AboutComponent';\r\nimport { Switch, Redirect, withRouter} from  'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addComment, fetchDishes } from '../redux/ActionCreators';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  \r\n  addComment: (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())}\r\n \r\n  \r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          dishes: DISHES,\r\n          selectedDish: null,\r\n          comments: COMMENTS,\r\n          promotions: PROMOTIONS,\r\n          leaders: LEADERS\r\n      };\r\n    }\r\n    componentDidMount() {\r\n      this.props.fetchDishes();\r\n    }\r\n\r\n    \r\n     \r\n  \r\n    render() {\r\n      \r\n      \r\n      const HomePage = () => {\r\n        return(\r\n            <Home \r\n                dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                promotion={this.state.promotions.filter((promo) => promo.featured)[0]}\r\n                leader={this.state.leaders.filter((leader) => leader.featured)[0]}\r\n                dishesLoading={this.props.dishes.isLoading}\r\n                dishesErrMess={this.props.dishes.errMess}\r\n            />\r\n        );\r\n      }\r\n      \r\n      \r\n      const Contact =()=>{\r\n        return(\r\n          <Contact/>\r\n        );\r\n      }\r\n\r\n      const About =()=>{\r\n        return(\r\n          <About leaders={this.state.leaders}/>\r\n        );\r\n      }\r\n\r\n      const DishWithId = ({match}) => {\r\n        return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n              comments={this.state.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n              addComment={this.props.addComment}\r\n              isLoading={this.props.dishes.isLoading}\r\n              errMess={this.props.dishes.errMess} />\r\n        );\r\n      };\r\n      \r\n      \r\n      return (\r\n        <div>\r\n         \r\n         <Header />\r\n        \r\n         <Switch>\r\n              <Route path='/home' component={HomePage} />\r\n              <Route exact path='/contactus' Component={Contact} /> \r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n              <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />} />\r\n              <Route exact path='/menu' component={() => <Menu dishes={this.state.dishes} />} />\r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n              <Redirect to=\"/home\" />\r\n          </Switch>\r\n        \r\n        <Footer />\r\n\r\n          <Menu dishes={this.state.dishes} onClick={(dishId) => this.onDishSelect(dishId)} />\r\n          <DishDetail dish={this.state.dishes.filter((dish) => dish.id === this.state.selectedDish)[0]} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  export default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\components\\HomeComponent.js",["116","117"],"import React from 'react';\r\nimport { Media, Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\n\r\nfunction RenderCard({item}) {\r\n\r\n    return(\r\n        <Card>\r\n            <CardImg src={item.image} alt={item.name} />\r\n            <CardBody>\r\n            <CardTitle>{item.name}</CardTitle>\r\n            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n            <CardText>{item.description}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n);\r\n}\r\n\r\nexport default Home; ","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\components\\ContactComponent.js",["118"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Input, Col, Row, Label } from 'reactstrap';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component {\r\n    \r\n    constructor(){\r\n        super(props);\r\n\r\n       \r\n\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n        \r\n    }\r\n    \r\n \r\n     }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(values.firstname,\r\n            values.lastname,\r\n            values.telnum,\r\n            values.email,\r\n            values.agree,\r\n            values.contactType,\r\n            values.message\r\n          );\r\n        // event.preventDefault();\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row row-content\">\r\n                    \r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n    \r\n                    \r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                            </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    \r\n                    <Form modal=\"feedback\" onSubmit={(values) => this.resetFeedback(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                \r\n                                \r\n                                <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                \r\n                                \r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                         \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                  \r\n              </div>\r\n         </div>\r\n            \r\n            </div>\r\n        );\r\n\r\n    }\r\n \r\n}\r\n\r\nexport default Contact;\r\n\r\n\r\n\r\n","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\shared\\leaders.js",[],"C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\shared\\comments.js",[],"C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\components\\AboutComponent.js",["119","120","121"],"import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardSubtitle,CardText, Media, CardBody, CardHeader } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader leaders={leader} />\r\n        );\r\n    });\r\n\r\n   \r\n   \r\n    function RenderLeader({leader}) {\r\n\r\n       \r\n        return(\r\n            \r\n            <Media>\r\n            <Media left>\r\n                <Media object src={leader.image} alt={leader.name}/>\r\n            </Media>\r\n            <Media.body>\r\n                <Media heading>{leader.name}</Media>\r\n                <Media>{leader.designation}</Media>\r\n                <Media>{leader.description}</Media>\r\n                \r\n                <Errors className=\"text-danger\"   show=\"touched\"  messages={{\r\n                          required: 'Required',\r\n                           validEmail: 'Invalid key'\r\n                                    }}\r\n                                 />\r\n               \r\n               \r\n           \r\n            </Media.body>\r\n        </Media>\r\n        );\r\n        }\r\n   \r\n   \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n           \r\n           \r\n\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\redux\\configureStore.js",["122","123","124"],"import {createStore, combineReducers, applyMiddleware  } from 'redux';\r\nimport { Reducer, initialState } from './reducer';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n \r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger) // combinedreducer\r\n        \r\n    );\r\n\r\n    return store;\r\n}","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\redux\\dishes.js",["125"],"import { DISHES } from '../shared/dishes';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = DISHES, action) => {\r\n    switch (action.type) {\r\n        default:\r\n          return state;\r\n      }\r\n};\r\n\r\nexport const Dishes = (state = { \r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\redux\\leaders.js",[],"C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\redux\\promotions.js",[],"C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\redux\\comments.js",[],"C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\redux\\ActionCreators.js",[],"C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\components\\LoadingComponent.js",[],"C:\\Users\\beaversmoagi0707\\Documents\\cool websites\\React\\confusion\\src\\redux\\forms.js",[],{"ruleId":"126","severity":1,"message":"127","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":18},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"126","severity":1,"message":"134","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":26},{"ruleId":"126","severity":1,"message":"135","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":15},{"ruleId":"126","severity":1,"message":"136","line":2,"column":48,"nodeType":"128","messageId":"129","endLine":2,"endColumn":56},{"ruleId":"126","severity":1,"message":"137","line":2,"column":58,"nodeType":"128","messageId":"129","endLine":2,"endColumn":66},{"ruleId":"138","severity":1,"message":"139","line":64,"column":37,"nodeType":"140","endLine":64,"endColumn":129},{"ruleId":"138","severity":1,"message":"141","line":81,"column":37,"nodeType":"140","endLine":87,"endColumn":44},{"ruleId":"138","severity":1,"message":"142","line":111,"column":21,"nodeType":"140","endLine":111,"endColumn":121},{"ruleId":"126","severity":1,"message":"143","line":185,"column":8,"nodeType":"128","messageId":"129","endLine":185,"endColumn":18},{"ruleId":"144","severity":2,"message":"145","line":221,"column":16,"nodeType":"128","messageId":"146","endLine":221,"endColumn":26},{"ruleId":null,"fatal":true,"severity":2,"message":"147","line":122,"column":77},{"ruleId":"126","severity":1,"message":"135","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":15},{"ruleId":"126","severity":1,"message":"148","line":2,"column":32,"nodeType":"128","messageId":"129","endLine":2,"endColumn":46},{"ruleId":null,"fatal":true,"severity":2,"message":"149","line":3,"column":19},{"ruleId":"126","severity":1,"message":"150","line":2,"column":44,"nodeType":"128","messageId":"129","endLine":2,"endColumn":56},{"ruleId":"126","severity":1,"message":"136","line":2,"column":57,"nodeType":"128","messageId":"129","endLine":2,"endColumn":65},{"ruleId":"138","severity":1,"message":"151","line":31,"column":13,"nodeType":"140","endLine":31,"endColumn":25},{"ruleId":"126","severity":1,"message":"152","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":17},{"ruleId":"126","severity":1,"message":"153","line":2,"column":19,"nodeType":"128","messageId":"129","endLine":2,"endColumn":31},{"ruleId":"126","severity":1,"message":"154","line":9,"column":10,"nodeType":"128","messageId":"129","endLine":9,"endColumn":21},{"ruleId":null,"fatal":true,"severity":2,"message":"155","line":11,"column":14},"no-unused-vars","'Dishdetail' is defined but never used.","Identifier","unusedVar","no-native-reassign",["156"],"no-negated-in-lhs",["157"],"'Component' is defined but never used.","'Media' is defined but never used.","'CardText' is defined but never used.","'CardBody' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'DishDetail' is assigned a value but never used.","no-undef","'Dishdetail' is not defined.","undef","Parsing error: Unexpected token, expected \",\"\n\n  120 | \n  121 | \n> 122 |   export default withRouter(connect(mapStateToProps, mapDispatchToProps)(Mai\n      |                                                                             ^","'CardImgOverlay' is defined but never used.","Parsing error: Identifier 'Form' has already been declared\n\n  1 | import React, { Component } from 'react';\n  2 | import { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Input, Col, Row, Label } from 'reactstrap';\n> 3 | import { Control, Form, Errors, actions } from 'react-redux-form';\n    |                   ^\n  4 | import { Link } from 'react-router-dom';\n  5 | \n  6 |","'CardSubtitle' is defined but never used.","Imported JSX component body must be in PascalCase or SCREAMING_SNAKE_CASE","'Reducer' is defined but never used.","'initialState' is defined but never used.","'createForms' is defined but never used.","Parsing error: Identifier 'Dishes' has already been declared\n\n   9 | };\n  10 | \n> 11 | export const Dishes = (state = { \n     |              ^\n  12 |     isLoading: true,\n  13 |     errMess: null,\n  14 |     dishes:[]}, action) => {","no-global-assign","no-unsafe-negation"]